
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/* MACROS */
#define HYPER LS(RA(LC(LCMD))) 
#define HYP_ENT HYPER ENTER
#define HYP_BSPC HYPER BSPC
#define RA_S RA(SPACE)
#define LCMD_ENT LCMD ENTER 
#define CMD_L LCMD L 
#define LC_SEM LCTRL SEMICOLON
#define CMD_S LG(S) S
#define CMD_X LG(X) X
#define CMD_C LG(C) C
#define CMD_V LG(V) V
#define CMD_W LG(W) W
#define CMD_T LG(T) T

/* german keymap */
#define DE_SS     MINUS       // ß
#define DE_OE     SEMICOLON   // Ö
#define DE_AE     SQT         // Ä
#define DE_UE     LBKT        // Ü
#define DE_SLSH   LS(N7)      // / 
#define DE_BSLS   RA(DE_SS)   // \

#define DE_LPRN LS(N8)        // (
#define DE_RPRN LS(N9)        // )
#define DE_EQL  LS(N0)        // =

#define DE_QUES LS(DE_SS)     // ?
#define DE_PLUS RBKT          // +
#define DE_ASTR LS(DE_PLUS)   // *
#define DE_HASH NUHS          // #
#define DE_QUOT LS(DE_HASH)   // '
#define DE_AT   RA(Q)         // @

#define DE_LCBR RA(N7)        // {
#define DE_LBRC RA(N8)        // [
#define DE_RBRC RA(N9)        // ]
#define DE_RCBR RA(N0)        // }
#define DE_BSLS RA(DE_SS)     // (backslash)

#define DE_LABK GRAVE         // <
#define DE_RABK LS(DE_LABK)   // >
#define DE_PIPE RA(DE_LABK)   // |

#define VOL_U   C_VOL_UP
#define VOL_D   C_VOL_DN

// screenshot macros
#define CMD_S_4 LS(LG(N4))
#define CMD_S_5 LS(LG(N5))

/ {
  behaviors {
    #include "macros.dtsi"

    // hold tab
    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    hm2: homerow_mods2 {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS2";
        #binding-cells = <2>;
        tapping-term-ms = <600>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    // taken from: https://github.com/MoonKraken/Adv360-Pro-ZMK/blob/V2.0/config/adv360.keymap
    bhm: normal_hr_mod {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS3";
          #binding-cells = <2>;
          tapping-term-ms = <170>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
    };
    shm: shift_hr_mod {
        compatible = "zmk,behavior-hold-tap";
        label = "SHIFT_HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <120>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    }; 

    // test
    shm2: shift_hr_mod2 {
        flavor = "balanced";
        tapping-term-ms = <280>;
        quick-tap-ms = <175>; // repeat on tap-into-hold
        require-prior-idle-ms = <150>;
        bindings = <&kp>, <&kp>;
        hold-trigger-on-release;
    }; 


    // tab dances
    td0: tap_dance_0 {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_0";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&kp DE_BSLS>, <&kp F13>;
    };
    open_br_1: tap_dance_1 {
        compatible = "zmk,behavior-tap-dance";
        label = "open normal and curly brackets";
        #binding-cells = <0>;
        tapping-term-ms = <190>;
        bindings = <&kp DE_LPRN>, <&kp DE_LCBR>;
    };
    close_br_1: tap_dance_2 {
        compatible = "zmk,behavior-tap-dance";
        label = "close normal and curly brackets";
        #binding-cells = <0>;
        tapping-term-ms = <190>;
        bindings = <&kp DE_RPRN>, <&kp DE_RCBR>;
    };
    f_find: tap_dance_3 {
        compatible = "zmk,behavior-tap-dance";
        label = "search on double tap";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp F>, <&kp LG(F)>;
    };

    sl {
        release-after-ms = <2000>;
    };
  };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
&kp ESC     &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &kp C_MUTE                                                                                                              &kp VOL_U   &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp BACKSPACE
&kp TAB     &kp Q           &kp W           &kp E           &kp R           &hm2 CMD_T      &kp CMD_S_5                                                                                                             &kp VOL_D   &kp Y           &kp U           &kp I           &kp O           &kp P           &kp BSLH
&sl 1       &kp A           &kp S           &kp D           &shm2 LSHIFT F  &kp G           &kp CMD_S_4                 &kp LCTRL       &kp HOME                    &kp RA_S    &kp LCMD                            &none       &kp H           &shm2 RSHIFT J   &kp K           &kp L           &hm LC_SEM      &sl 1
&kp LSHFT   &kp Z           &kp X           &hm2 CMD_C      &hm2 CMD_V      &kp B                                                       &kp END                     &kp PG_UP                                                   &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH        &kp RSHFT
//&none       &kp Z           &kp X           &hm2 CMD_C      &hm2 CMD_V      &kp B                                                       &kp END                     &kp PG_UP                                                   &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH        &none
&kp LCMD    &kp GRAVE       &kp CAPS        &kp LEFT        &kp RIGHT                                  &mt HYP_ENT      &kp BSPC        &kp DEL                     &kp LALT    &mt LCMD_ENT    &lt 2 SPACE                                     &kp UP          &kp DOWN        &kp LBKT        &kp RBKT        &kp F14
            >;
        };

        layer_SPECIAL {
            
            bindings = <
 &trans     &trans          &trans          &trans          &trans          &trans          &trans                                                                                                                  &mo 4       &trans          &trans          &trans          &trans          &trans          &trans
 &trans     &trans          &trans          &trans          &trans          &trans          &trans                                                                                                                  &trans      &trans          &trans          &trans          &trans          &trans          &trans
 &trans     &kp DE_AE       &kp DE_SS       &kp DE_UE       &kp DE_BSLS     &kp DE_EQL      &trans                      &trans          &trans                      &trans      &trans                              &trans      &trans          &trans          &trans          &trans          &trans          &trans
 &trans     &trans          &trans          &trans          &trans          &trans                                                      &trans                      &trans                                                      &trans          &trans          &trans          &trans          &trans          &trans
 &trans     &trans          &trans          &trans          &trans                                      &trans          &trans          &trans                      &trans      &trans          &trans                                          &trans          &trans          &trans          &trans          &trans >;
        };

        layer_SYMBOLS {
            bindings = <
 &trans     &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp C_MUTE                                                                                                              &mo 4       &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11
 &trans     &kp DE_AT       &kp DE_LCBR     &kp DE_RCBR     &kp DE_QUOT     &kp DE_PLUS     &kp DE_HASH                                                                                                             &trans      &trans          &kp HOME        &kp END         &trans          &trans          &kp F12
 &trans     &kp DE_QUES     &open_br_1      &close_br_1     &kp DE_SLSH     &kp DE_EQL      &kp DE_ASTR                 &trans          &trans                      &trans      &trans                              &trans      &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &trans          &trans
 &trans     &kp DE_PIPE     &kp DE_LABK     &kp DE_RABK     &kp DE_LBRC     &kp DE_RBRC                                                 &trans                      &trans                                                      &trans          &trans          &trans          &trans          &trans          &trans
 &trans     &trans          &trans          &trans          &trans                                      &trans          &trans          &trans                      &trans      &trans          &trans                                          &trans          &trans          &trans          &trans          &trans
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL  &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &trans                                                                                                                  &mo 3       &kp N6          &kp KP_NUM      &kp KP_EQUAL    &kp KP_DIVIDE   &kp KP_MULTIPLY &kp MINUS
 &kp TAB    &kp Q           &kp W           &kp E           &kp R           &kp T           &none                                                                                                                   &none       &kp Y           &kp KP_N7       &kp KP_N8       &kp KP_N9       &kp KP_MINUS    &kp BSLH
 &kp ESC    &kp A           &kp S           &kp D           &kp F           &kp G           &none                       &kp LCTRL       &kp RALT                    &kp LGUI    &kp RCTRL                           &none       &kp H           &kp KP_N4       &kp KP_N5       &kp KP_N6       &kp KP_PLUS     &kp SQT
 &kp LSHFT  &kp Z           &kp X           &kp C           &kp V           &kp B                                                       &kp HOME                    &kp PG_UP                                                   &kp N           &kp KP_N1       &kp KP_N2       &kp KP_N3       &kp KP_ENTER    &kp RSHFT
 &mo 2      &kp GRAVE       &kp CAPS        &kp LEFT        &kp RIGHT                                   &kp BSPC        &kp DEL         &kp END                     &kp PG_DN   &kp ENTER       &kp KP_N0                                       &kp UP          &kp DOWN        &kp KP_DOT      &kp RBKT        &mo 2
            >;
        };

        layer_mod {
            bindings = <
  &none     &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &none                                                                                                                   &trans      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &none
  &none     &none           &none           &none           &none           &none           &bootloader                                                                                                             &bootloader &none           &none           &none           &none           &none           &none
  &none     &none           &none           &none           &none           &none           &rgb_ug RGB_MEFS_CMD 5      &bt BT_CLR      &none                       &bt BT_CLR  &bt BT_CLR                          &rgb_ug RGB_MEFS_CMD 5      &none &none     &none           &none           &none           &none
  &none     &none           &none           &none           &none           &none                                                       &none                       &none                                                       &none           &none           &none           &none           &none           &none
  &none     &none           &none           &bl BL_INC      &bl BL_DEC                                  &rgb_ug RGB_TOG &bl BL_TOG      &none                       &none       &bl BL_TOG      &rgb_ug RGB_TOG                                 &bl BL_INC      &bl BL_DEC      &none           &none           &none
            >;
        };
    };
};
